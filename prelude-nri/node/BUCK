_NODE_URL = select({
    "config//os:linux": "https://nodejs.org/dist/v20.0.0/node-v20.0.0-linux-x64.tar.xz",
    "config//os:macos": select({
        "config//cpu:arm64": "https://nodejs.org/dist/v20.0.0/node-v20.0.0-darwin-arm64.tar.gz",
        "config//cpu:x86_64": "https://nodejs.org/dist/v20.0.0/node-v20.0.0-darwin-x64.tar.gz",
    }),
})

_NODE_SHA256 = select({
    "config//os:linux": "9e512f1f1cadb3a5e37a10aa2d5e632f93aaf9f37165803e2ed981009970a3d7",
    "config//os:macos": select({
        "config//cpu:arm64": "ee27eea6694a5d8c834b11a12fb85a5dae01a91178be12920a6da12d8c299c43",
        "config//cpu:x86_64": "a26019f8dc6f0b261b1eebabeedb00f478460c36950a99b5c7e161af005e400e",
    }),
})

_NODE_PREFIX = select({
    "config//os:linux": "node-v20.0.0-linux-x64",
    "config//os:macos": "node-v20.0.0-darwin-arm64",
})

http_archive(
    name = "node_binaries",
    urls = [_NODE_URL],
    sha256 = _NODE_SHA256,
    strip_prefix = _NODE_PREFIX,
)

genrule(
    name = "bin",
    out = "bin",
    cmd = "ln -s $(location :node_binaries)/bin $OUT",
    visibility = ["PUBLIC"],
)

genrule(
    name = "node",
    out = "node",
    cmd = "ln -s $(location :node_binaries)/bin/node $OUT",
    visibility = ["PUBLIC"],
    executable = True,
)

export_file(
    name = "build_node_modules.py",
    visibility = ["PUBLIC"],
)

export_file(
    name = "build_npm_bin.py",
    visibility = ["PUBLIC"],
)
