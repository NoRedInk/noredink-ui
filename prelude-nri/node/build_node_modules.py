#!/usr/bin/env python3
"""
Make a fresh `node_modules` directory in an isolated directory.

This script assumes it has `npm` and its dependencies in the right `PATH` and
`NODE_PATH`. Make sure that's set up properly using whatever installation method
is necessary!
"""
import argparse
import os
import subprocess
import sys
import shutil
import tempfile

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("out", help="Where you want node_modules to end up")
    parser.add_argument(
        "--package",
        help="The package.json to install dependencies from",
        default="package.json",
    )
    parser.add_argument(
        "--package-lock",
        help="The package-lock.json corresponding to package.json",
        default="package-lock.json",
    )
    parser.add_argument(
        "--no-ignore-scripts",
        action="store_true",
        help="Don't run package post-install scripts",
    )

    args = parser.parse_args()

    with tempfile.TemporaryDirectory() as tempdir:
        # npm wants these to be real files for whatever reason, and will throw
        # errors if they're symlinks.
        shutil.copy(args.package, os.path.join(tempdir, "package.json"))
        shutil.copy(args.package_lock, os.path.join(tempdir, "package-lock.json"))

        cmd = ["npm", "clean-install"]
        if not args.no_ignore_scripts:
            cmd.append("--ignore-scripts")

        proc = subprocess.Popen(cmd, cwd=tempdir)
        proc.communicate()

        if proc.returncode == 0:
            os.rename(
                os.path.join(tempdir, "node_modules"),
                args.out,
            )

    sys.exit(proc.returncode)
